q()
q()
q()
q()
q()
q()
x <- c(-0.5, 0, 1, 1, 1.5)
y <- c(0, 0, 2, 0, 0)
plot(x, y, lwd =3, frame =FALSE, type ="1")
plot(x, y, lwd =3, frame =FALSE)
?plot
plot(x, y, lwd =3, frame =FALSE, type ="l")
x <- c(-0.5, 0, 1, 1, 1.5,3)
plot(x, y, lwd =3, frame =FALSE, type ="l")
x <- c(-0.5, 0, 1, 1, 1.5)
plot(x, y, lwd =3, frame =FALSE, type ="l")
plot(x, y, lwd =3, frame =FALSE, type ="b")
plot(x, y, lwd =3, frame =FALSE, type ="h")
plot(x, y, lwd =3, frame =FALSE, type ="b")
?pbeta
pbeta(0.75, 2, 1)
q()
x <- 1:4
p <- x/sum(x)
rownames(temp) <- c("X","Prob")
temp <- rbind(x, p)
rownames(temp) <- c("X","Prob")
temp
q()
n_x <- 9
n_y <- 9
x_bar <- -3
y_bar <- 1
s_x <- 1.5
s_y <- 1.8
alpha <- 0.1
sp_2 <- ((n_x - 1)*s_x^2 + (n_y - 1)*s_y^2) / (n_x + n_y - 2)
sp <- sqrt(sp_2)
ts <- qt(1 - (alpha/2), n_x + n_y - 2)
round((x_bar - y_bar) + c(-1, 1) * ts * sp * (sqrt(1/n_x + 1/n_y)), 3)
library(HistData)
data("Galton")
library(tidyverse)
Galton
str(Galton)
View(Galton)
ggplot(data=Galton)+geom_point(mapping= aes(x=child, y=parent))
ggplot(data=Galton)+geom_point(mapping= aes(x=parent, y=child))
g <- ggplot(Galton, aes(x = value, fill = variable))
g <- g + geom_histogram(colour = "black", binwidth=1)
g <- g + facet_grid(. ~ variable)
g
?ggplot
long <- melt(Galton)
g <- ggplot(Galton, aes(x = value, fill = variable))
g <- g + geom_histogram(colour = "black", binwidth=1)
g <- g + facet_grid(. ~ variable)
g
g
long <- melt(Galton)
g <- ggplot(long, aes(x = value, fill = variable))
g <- g + geom_histogram(colour = "black", binwidth=1)
g <- g + facet_grid(. ~ variable)
g
q()
q()
remove.packages("caret", lib="~/R/win-library/4.0")
q()
setwd("C:/IToz/PML_Course")
knitr::opts_chunk$set(echo = TRUE)
train_in <- read.csv('./pml-training.csv', header=T)
validation <- read.csv('./pml-testing.csv', header=T)
View(train_in)
View(validation)
set.seed(3433)
inTrain <-createDataPartition(trainData$classe, p=0.7, list=FALSE)
library(caret)
inTrain <-createDataPartition(trainData$classe, p=0.7, list=FALSE)
trainData <- read.csv('./pml-training.csv', header=T)
testData <- read.csv('./pml-testing.csv', header=T)
inTrain <-createDataPartition(trainData$classe, p=0.7, list=FALSE)
training <- trainData(inTrain,)
training <- trainData[inTrain,]
testing <- trainData[-inTrain,]
dim(training)
dim(testing)
q()
